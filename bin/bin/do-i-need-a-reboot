#!/usr/bin/env python3
# checks if you need a reboot on archlinux

import os
import subprocess
import glob
import sys
from math import floor

def get_kernel() -> str:
    command = "uname -r".split()
    return subprocess.run(command, capture_output=True) \
        .stdout \
        .strip() \
        .decode("utf-8")


def get_kernel_version_number(uname: str, varient: str) -> str:
    return uname.split(f"-{varient}")[0]


def get_kernel_varient(uname: str) -> str:
    varient = ""
    for u in reversed(uname):
        if u == "-":
            break
        varient = u + varient
    return varient


if __name__ == "__main__":
    silent_flag = False
    if "-s" in sys.argv:
        silent_flag = True

    CACHE_PATH="/var/cache/pacman/pkg"
    uname    = get_kernel()
    varient  = get_kernel_varient(uname)
    version  = get_kernel_version_number(uname, varient)

    pkg_name = f"linux-{varient}-{version}-x86_64.pkg.tar.zst"
    pkg_glob = f"{CACHE_PATH}/linux-{varient}-*-x86_64.pkg.tar.zst"
    pkg_path = f"{CACHE_PATH}/{pkg_name}"

    current_pkg = floor(os.stat(pkg_path).st_mtime)
    newest_pkg = floor(max(os.stat(pkg).st_mtime for pkg in glob.glob(pkg_glob)))

    if current_pkg != newest_pkg:
        if not silent_flag:
            print("Yes!")
    elif not silent_flag:
        print("No")

    sys.exit(current_pkg != newest_pkg)
