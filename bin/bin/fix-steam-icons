#!/usr/bin/env python3
# makes desktop icons generated by steam to have StartupWMClass field

import glob
import os
import subprocess as sub
import sys
from typing import IO, Any

APP_PATH = os.getenv("HOME", default="~") + "/.local/share/applications"
FILE_GLOB = f"{APP_PATH}/*.desktop"
COMMAND = [ "grep", "Icon=steam_icon" ] + glob.glob(FILE_GLOB)

def msg(txt: str) -> None:
    print(txt, file=sys.stderr)

# "filename:matching line\n..." -> [("filename", "matching line"), ...]
def zipify_grep(grep_output: str) -> map:
    return map(lambda s: \
               tuple(s.split(":", maxsplit=1)), \
               grep_output.split("\n"))

def call_grep() -> str:
    return sub.check_output(COMMAND)\
        .decode("utf-8")[:-1]

def has_wmclass(file: IO[Any]) -> bool:
    if "w" in file.mode:
        return False

    if "a" in file.mode:
        file.seek(0)

    return any("StartupWMClass" in line for line in file)

if __name__ == "__main__":
    try:
        output = call_grep()
    except sub.CalledProcessError as e:
        sys.exit(e.returncode)

    if len(output) == 0:
        print("No files to process!")
        sys.exit(1)

    for filename, icon in zipify_grep(output):
        with open(filename, "a+") as file:
            if not has_wmclass(file):
                wm_class = icon.replace("Icon=steam_icon", "StartupWMClass=steam_app")
                file.write(wm_class)
                msg(f"=>> fixed: {filename}")
            else:
                msg(f"=>> skipping: {filename}")
