#!/bin/sh
# based off ThePrimeagen's script

# these are the arguments for the program, this script was made a long time
# ago, so these must be what they are for backwards compatibility
MODE_FIND="zoxide"
MODE_DIR="explicit-path"
MODE_CMD="program"

BANNER='\ \ \ tmux sessionizer / / /'

alias fuzzy_find="fzf --layout=reverse --preview-window hidden --height=100%"
alias search_recent_files="zoxide query --list | fuzzy_find"

display_banner() (
    FLAGS="--gay -f future"

    clear
    # shellcheck disable=SC2086 # we want $FLAGS to split
    command -v 'toilet' >/dev/null 2>&1 && toilet $FLAGS "$BANNER"
)

tmux_new() (
    name="$1" path="$2" cmd="$3"

    # this check may seem redundant, but the session won't spawn without it
    if [ -n "$cmd" ]; then
        tmux new-session -ds "$name" -c "$path" "$cmd"
    else
        tmux new-session -ds "$name" -c "$path"
    fi

    tmux switch-client -t "$name"
)

prompt_input() (
    msg="$1"
    out=""

    printf "%s: " "$msg" 1>&2
    read -r out
    echo "$out"
)

confirm() (
    name="$1" path="$2" cmd="$3"
    confirmation=""

    [ -z "$cmd" ] && cmd="$SHELL"

    clear
    printf "Confirm:\n"
    printf "* Session name: %s\n" "$name"
    printf "* Session path: %s\n" "$path"
    printf "* Session command: '%s'\n" "$cmd"

    confirmation=$(prompt_input "Is this OK? [Y/n]")

    if [ "$confirmation" = "n" ] || [ confirmation = "N" ]; then
        return 1
    fi

    return 0
)

main() (
    working_path="" program="" name=""

    display_banner

    name=$(prompt_input "New session name")

    case "$1" in
    "$MODE_FIND") working_path=$(search_recent_files) ;;
    "$MODE_DIR") working_path=$(prompt_input "Starting directory") ;;
    "$MODE_CMD") program=$(prompt_input "Command to run") ;;
    *)
        echo "Invalid argument: '$1'"
        return 1
        ;;
    esac

    if [ -z "$working_path" ]; then
        working_path="$HOME"
    fi

    if [ -n "$name" ] && confirm "$name" "$working_path" "$program"; then
        tmux_new "$name" "$working_path" "$program"
    else
        return 1
    fi
)

main "$1"
