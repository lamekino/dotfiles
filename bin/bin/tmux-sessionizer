#!/bin/sh
# based off ThePrimeagen's script

# these are the arguments for the program, this script was made a long time
# ago, so these must be what they are for backwards compatibility
MODE_FIND="zoxide"
MODE_DIR="explicit-path"
MODE_CMD="program"

BANNER="\\ \\ \\ tmux sessionizer / / /"

alias fuzzy_find="fzf --layout=reverse --preview-window hidden --height=100%"
alias query_directory="zoxide query --list | fuzzy_find"

display_banner() (
    FLAGS="--gay -f future"

    clear
    # shellcheck disable=SC2086 # we want $FLAGS to split
    command -v 'toilet' >/dev/null 2>&1 && toilet $FLAGS "$BANNER"
)

tmux_new() (
    name="$1" path="$2" cmd="$3"

    # this check may seem redundant, but the session won't spawn without it
    if [ -n "$cmd" ]
    then tmux new-session -ds "$name" -c "$path" "$cmd"
    else tmux new-session -ds "$name" -c "$path"
    fi

    tmux switch-client -t "$name"
)

matches_regex() (
    string="$1" pattern="$2"

    expr "$string" :  "$pattern" > /dev/null
)

prompt_user() (
    msg="$1"
    recv=""

    printf "%s: " "$msg" 1>&2
    read -r recv
    echo "$recv"
)

confirm_session() (
    name="$1" path="$2" cmd="$3"
    confirmation=""

    [ -z "$cmd" ] && cmd="$SHELL"

    clear
    printf "Confirm:\n"
    printf "* Session name: %s\n" "$name"
    printf "* Session path: %s\n" "$path"
    printf "* Session command: '%s'\n" "$cmd"

    confirmation=$(prompt_user "Is this OK? [Y/n]")

    # return value
    ! matches_regex "$confirmation" "^(n|N)+"
)

# main program
mode="$1"
working_path="" program="" name=""

display_banner
while [ -z "$name" ]; do
    name=$(prompt_user "New session name")
done

case "$mode" in
"$MODE_FIND") working_path=$(query_directory) ;;
"$MODE_DIR")  working_path=$(prompt_user "Starting directory") ;;
"$MODE_CMD")  program=$(prompt_user "Command to run") ;;
*) exit 1 ;;
esac

if [ -z "$working_path" ]; then
    working_path="$HOME"
fi

if confirm_session "$name" "$working_path" "$program"; then
    tmux_new "$name" "$working_path" "$program"
fi
