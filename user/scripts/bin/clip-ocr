#!/bin/sh
# copies image text to clipboard using tesseract meant to be used with
# a screenshot program

# requires:
# - tesseract (https://github.com/tesseract-ocr/tesseract)
# - notify-send
# - xclip

set -x

[ -z "$EDITOR" ] && EDITOR=mousepad
[ -z "$SCRSHOT_CMD" ] && SCRSHOT_CMD="xfce4-screenshooter -r -s"

# shellcheck disable=SC2139 # save program name here so it can be ran anywhere
alias relaunch_with="$0"
# shellcheck disable=SC2139 # allows user to define region selector with args
alias save_region_as="$SCRSHOT_CMD"
alias notify="notify-send -i emblem-photos"

readonly COPY_ACTION=0
readonly EDIT_ACTION=1
readonly ERROR_ACTION=255

pngfile="$1"
txtfile="$2"

cleanup() {
    rm -fr "$pngfile" "$txtfile"
}

trap cleanup TERM INT

get_text_action() {
    if [ -z "$1" ]; then
        notify "No text found from screenshot"
        return "$ERROR_ACTION"
    fi

    notify -u critical \
        -A Copy \
        -A Edit \
        "Processed from screenshot:" \
        "\'$1\'"
}

clipboard_string() {
    printf "%s" "$1" | xclip -selection clipboard
    notify "Copied!"
}

edit_string() {
    printf "%s\n" "$1" > "$txtfile"
    sleep 0.5
    "$EDITOR" "$txtfile"
}

# relaunch program with a temporary screenshot when no args
if [ -z "$1" ]; then
    pngfile="$(mktemp --suffix=.png)"
    txtfile="$(mktemp)"

    save_region_as "$pngfile"
    relaunch_with "$pngfile" "$txtfile"
    exit 0
fi

# get selection as text
ocr_data=$(tesseract "$pngfile" - 2>/dev/null)

case $(get_text_action "$ocr_data") in
"$COPY_ACTION") clipboard_string "$ocr_data" ;;
"$EDIT_ACTION") edit_string "$ocr_data" ;;
"$ERROR_ACTION"|*) ;;
esac

cleanup
